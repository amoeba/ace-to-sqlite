name: Export to SQLite
on:
  - workflow_dispatch
  - push

jobs:
  export_ace_world:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Start MySQL
        run: sudo systemctl start mysql.service
      - name: Download release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: ACEmulator/ACE-World-16PY-Patches
          latest: true
          fileName: ACE.World*.zip
      - name: Decompres
        run: find . -iname "ACE-World*.zip" -exec unzip {} \;
      - name: Load SQL
        run: sudo sh scripts/load.sh
      - name: Export
        run: sudo sh scripts/export.sh
      - name: Relax permissions
        run: sudo chmod -R o+rwx /var/lib/mysql-files
      - name: Install datasette and csvs-to-sqlite
        run: python3 -m pip install datasette csvs-to-sqlite
      - name: Create SQLite database
        run: csvs-to-sqlite /var/lib/mysql-files/ace_world/*.tsv ace_world.db -s $'\t'
      - uses: actions/upload-artifact@v3
        with:
          name: ace_world.db
          path: ace_world.db
  export_ace_pcap_exports:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Start MySQL
        run: sudo systemctl start mysql.service
      - name: Download latest release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: ACEmulator/ACE-PCAP-Exports
          latest: true
          fileName: ACE.World*.zip
      - name: Decompress
        run: find . -iname "ACE-World*.zip" -exec unzip {} \;
      - name: Load SQL
        run: sudo sh scripts/load.sh
      - name: Export
        run: sudo sh scripts/export.sh
      - name: Relax permissions
        run: sudo chmod -R o+rwx /var/lib/mysql-files
      - name: Install csvs-to-sqlite
        run: python3 -m pip install csvs-to-sqlite
      - run: ls -al /var/lib/mysql-files/ace_world/
      - name: Create SQLite database
        run: csvs-to-sqlite /var/lib/mysql-files/ace_world/*.tsv ace_pcap_exports.db -s $'\t'
      - uses: actions/upload-artifact@v3
        with:
          name: ace_pcap_exports.db
          path: ace_pcap_exports.db
  publish_with_datasette:
    runs-on: ubuntu-latest
    needs: [export_ace_world, export_ace_pcap_exports]
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: "ace_world.db"
      - uses: actions/download-artifact@v3
        with:
          path: "ace_pcap_exports.db"
      - name: Install datasette
        run: python3 -m pip install datasette
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: datasette install datasette-publish-fly
      - run: ls -al
      - run: datasette publish fly *db --app="acemu-db"
        env:
          FLY_APP: $${secrets.FLY_APP}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
