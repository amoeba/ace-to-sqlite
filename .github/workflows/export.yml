name: Export ACE to SQLite
on:
  - push
  - workflow_dispatch

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Start MySQL
        run: sudo systemctl start mysql.service
      - name: Download latest ACE release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: ACEmulator/ace
          latest: true
          fileName: ACE.Server.zip
      - name: Decompress latest release
        run: unzip ACE.Server.zip
      - name: Download latest World release
        uses: robinraju/release-downloader@v1.7
        with:
          repository: ACEmulator/ACE-World-16PY-Patches
          latest: true
          fileName: ACE.World*.zip
      - name: Decompress latest World release
        run: find . -iname "ACE-World*.zip" -exec unzip {} \;
      - name: Create databases
        run: mysql -u root --password=root -B -e "CREATE DATABASE ace_auth; CREATE DATABASE ace_shard; CREATE DATABASE ace_world;"
      - name: Load Base
        run: for f in $(find DatabaseSetupScripts/Base -iname "*.sql"); do mysql -u root --password=root < "$f"; done;
      - name: Load Shard Updates
        run: for f in $(find DatabaseSetupScripts/Updates/Shard -iname "*.sql"); do mysql --database=ace_shard -u root --password=root < "$f"; done;
      - name: Load Authentication Updates
        run: for f in $(find DatabaseSetupScripts/Updates/Authentication -iname "*.sql"); do mysql --database=ace_auth -u root --password=root < "$f"; done;
      - name: Load World Updates
        run: for f in $(find DatabaseSetupScripts/Updates/World -iname "*.sql"); do mysql --database=ace_world -u root --password=root < "$f"; done;
      - name: Load World release
        run: for f in $(find . -iname "ACE-World*.sql"); do mysql --database=ace_world -u root --password=root < "$f"; done;
      - name: Export ACE
        run: sudo sh scripts/export_ace.sh
      - name: Relax permissions
        run: sudo chmod -R o+rwx /var/lib/mysql-files
      - uses: actions/upload-artifact@v3
        with:
          name: export
          path: /var/lib/mysql-files/
  publish:
    runs-on: ubuntu-latest
    needs: export
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: export
      - name: Display structure of downloaded files
        run: tree .
      - name: Install datasette and friends
        run: python -m pip install datasette csvs-to-sqlite datasette-publish-vercel
      - name: Create Auth database
        run: csvs-to-sqlite ./ace_auth/* ace_auth.db
      - name: Create Shard database
        run: csvs-to-sqlite ./ace_shard/* ace_shard.db
      - name: Create World database
        run: csvs-to-sqlite ./ace_world/* ace_world.db
      - name: Publish
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: datasette publish vercel --project ace-db --token $VERCEL_TOKEN *.db
